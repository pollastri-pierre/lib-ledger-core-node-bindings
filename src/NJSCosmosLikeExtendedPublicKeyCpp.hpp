// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from addresses.djinni

#ifndef DJINNI_GENERATED_NJSCOSMOSLIKEEXTENDEDPUBLICKEY_HPP
#define DJINNI_GENERATED_NJSCOSMOSLIKEEXTENDEDPUBLICKEY_HPP


#include "NJSCosmosLikeAddressCpp.hpp"
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

#include <nan.h>
#include <node.h>
#include "../include/CosmosLikeExtendedPublicKey.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSCosmosLikeExtendedPublicKey final {
public:

    static void Initialize(Local<Object> target);
    NJSCosmosLikeExtendedPublicKey() = delete;

    static Local<Object> wrap(const std::shared_ptr<ledger::core::api::CosmosLikeExtendedPublicKey> &object);
    static Nan::Persistent<ObjectTemplate> CosmosLikeExtendedPublicKey_prototype;

private:
    /** Derive an address from an xPUB and a path. */
    static NAN_METHOD(derive);

    /** Derive a public key from an xPUB and a path. */
    static NAN_METHOD(derivePublicKey);

    /** Derive a shorten version of a public key (SHA256 + RIPEMD160) from an xPUB and a path. */
    static NAN_METHOD(deriveHash160);

    /** Get the publicKey in bech32 representatrion. */
    static NAN_METHOD(toBech32);

    /** Get the publicKey in base58 representatrion. */
    static NAN_METHOD(toBase58);

    /** Get the root path of the xPUB. */
    static NAN_METHOD(getRootPath);

    static NAN_METHOD(New);

    static NAN_METHOD(isNull);
};
#endif //DJINNI_GENERATED_NJSCOSMOSLIKEEXTENDEDPUBLICKEY_HPP
